{"version":3,"file":"static/js/387.417794c3.chunk.js","mappings":"yRAEaA,EAAYC,EAAAA,GAAAA,IAAH,2DAKTC,EAAWD,EAAAA,GAAAA,IAAH,2DAKRE,EAAWF,EAAAA,GAAAA,IAAH,+GAORG,EAAYH,EAAAA,GAAAA,KAAH,6GAOTI,EAAYJ,EAAAA,GAAAA,KAAH,qI,SCmCtB,EA/Ca,WACX,OAA4BK,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,2FACEL,EAAU,WADZ,mBAG2BM,EAAAA,EAAAA,IAAaL,GAHxC,OAGUM,EAHV,OAIIH,EAAQG,GACRP,EAAU,YALd,gDAOIA,EAAU,YACVQ,QAAQC,IAAR,MARJ,0DAHc,sBACTR,GADS,mCAcdS,EACD,GAAE,CAACT,KAGF,iCACE,kCACA,SAACU,EAAA,EAAD,CAAgBC,WAAYb,KAC5B,yBACGI,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACzB,EAAD,YACE,SAACE,EAAD,CACEwB,MAAM,QACNC,OAAO,QACPC,IAAKH,EAAeI,EAAAA,GAAkBJ,EAAe,WACrDK,IAAKP,EACLQ,QAAQ,UAEV,UAAC5B,EAAD,YACE,SAACC,EAAD,UAAYmB,KACZ,SAAClB,EAAD,UAAYmB,SAVAF,EADR,QAkBjB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 30px;\n`;\n\nexport const ActorImg = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const ActorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 0;\n  alignitems: center;\n`;\n\nexport const ActorName = styled.span`\n//   display: inline-block;\n  text-align: center;\n  padding: 10px;\n  color: red;\n`;\n\nexport const Character = styled.span`\n//   display: inline-block;\n  text-align: center;\n  padding: 10px;\n  font-style: italic;\n  color: blue;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport RequestGallery from 'components/RequestGallery/RequestGallery';\nimport { fetchingCast, BASE_POSTER_URL } from 'components/Api/Api';\n\nimport {\n  Container,\n  ActorName,\n  ActorImg,\n  Character,\n  ActorBox,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function setMovieCast() {\n      setStatus('pending');\n      try {\n        const castById = await fetchingCast(movieId);\n        setCast(castById);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n    setMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Cast</h3>\n      <RequestGallery propStatus={status} />\n      <div>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <Container key={id}>\n            <ActorImg\n              width=\"200px\"\n              height=\"300px\"\n              src={profile_path ? BASE_POSTER_URL + profile_path : 'No Photo'}\n              alt={name}\n              loading=\"lazy\"\n            />\n            <ActorBox>\n              <ActorName>{name}</ActorName>\n              <Character>{character}</Character>\n            </ActorBox>\n          </Container>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["Container","styled","ActorImg","ActorBox","ActorName","Character","useState","status","setStatus","movieId","useParams","cast","setCast","useEffect","fetchingCast","castById","console","log","setMovieCast","RequestGallery","propStatus","map","id","name","character","profile_path","width","height","src","BASE_POSTER_URL","alt","loading"],"sourceRoot":""}