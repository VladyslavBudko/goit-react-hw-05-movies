{"version":3,"file":"static/js/556.ca7b5d9d.chunk.js","mappings":"kSAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kVAmBJE,EAAMF,EAAAA,GAAAA,IAAH,uDAKHG,GAAWH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8NAcRI,EAAYJ,EAAAA,GAAAA,IAAH,sFAMTK,EAAWL,EAAAA,GAAAA,IAAH,yC,aCkDrB,EAnFqB,WAAO,IAAD,IACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOG,EAAP,KAAqBC,EAArB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAKX,EAAS,OAAO,KADP,wCAGd,2FACEI,EAAU,WADZ,mBAO6BQ,EAAAA,EAAAA,IAAaZ,GAP1C,OAOUa,EAPV,OAQIP,EAAgBO,GAChBT,EAAU,YATd,gDAWIA,EAAU,YACVU,QAAQC,IAAR,MAZJ,0DAHc,0DAmBdF,EACD,GAAE,CAACb,IAIJ,ICtC6BgB,EDuC3BC,EAOEZ,EAPFY,MACAC,EAMEb,EANFa,KACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,QACAC,EAGEhB,EAHFgB,YALF,EAQIhB,EAFFiB,aAAAA,OANF,MAMiB,EANjB,EAOEC,EACElB,EADFkB,aAGEC,EAAS,GAKb,OAFKA,EAFJH,EAEa,UAAMI,EAAAA,GAAN,YAAyBJ,GADtB,SAIf,iCACE,SAACxB,EAAD,CAAU6B,GAAInB,EAAd,UACE,yCAEF,UAACX,EAAD,YACE,SAAC+B,EAAA,EAAD,CAAgBC,WAAYzB,KAC5B,SAACJ,EAAD,CAAU8B,IAAKL,EAAWM,IAAKb,GAASC,EAAMa,QAAQ,UACtD,UAACjC,EAAD,YACE,0BAAKmB,GAASC,EAAd,QACA,wBAAKE,KACL,2BACE,yCACCG,MAEH,2BACE,0CCrEmBP,EDsEHM,GCrEf,EAAPN,IAAa,EACR,KAEFA,EAAKgB,QAAQ,KDkET,sBAGH,2BACE,wCACCb,GAAQ,kCAIf,4BACE,SAAC1B,EAAD,CAAMiC,GAAG,OAAT,mBACA,SAACjC,EAAD,CAAMiC,GAAG,UAAT,yBAEF,SAAC,EAAAO,SAAD,CAAUC,UAAU,mDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/round.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  background-color: pink;\n  margin: 10px;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\nexport const Box = styled.div`\ndisplay: flex;\nmargin: 20px;\n`\n\nexport const BackLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: white;\n  background-color: orangered;\n\n  :hover,\n  :focus-visible {\n    color: black;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 30px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 450px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport RequestGallery from 'components/RequestGallery/RequestGallery';\nimport { fetchMovieId, BASE_POSTER_URL } from 'components/Api/Api';\nimport {\n  Box,\n  Container,\n  MovieImg,\n  Link,\n  BackLink,\n} from './MovieDetails.styled';\nimport { setReleaseVote } from 'services/round';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) return null;\n\n    async function getMovieId() {\n      setStatus('pending');\n\n      try {\n        // якщо ID не число, а строка додаємо Number()\n        // const getMovieId = await fetchMovieId(Number(movieId));\n\n        const getMovieId = await fetchMovieId(movieId);\n        setMovieDetails(getMovieId);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n\n    getMovieId();\n  }, [movieId]);\n\n  // console.log(movieDetails);\n\n  const {\n    title,\n    name,\n    overview,\n    tagline,\n    poster_path,\n    vote_average = 0,\n    release_date,\n  } = movieDetails;\n\n  let imagePath = ``;\n  !poster_path\n    ? (imagePath = '/main')\n    : (imagePath = `${BASE_POSTER_URL}/${poster_path}`);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <span>Go back</span>\n      </BackLink>\n      <Box>\n        <RequestGallery propStatus={status} />\n        <MovieImg src={imagePath} alt={title || name} loading=\"lazy\" />\n        <Container>\n          <h1>{title || name} </h1>\n          <h2>{tagline}</h2>\n          <h3>\n            <b>Release date:</b>\n            {release_date}\n          </h3>\n          <h3>\n            <b>Vote average:</b>\n            {setReleaseVote(vote_average) || `vote not found`}\n          </h3>\n\n          <h3>\n            <b>Description:</b>\n            {overview || `description not found`}\n          </h3>\n        </Container>\n      </Box>\n      <nav>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </nav>\n      <Suspense fallback={<h2>Loading: Movie details</h2>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","export function setReleaseDate(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  } else if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n}\n\nexport function setReleaseVote(vote) {\n  if (vote * 1 === 0) {\n    return null;\n  }\n  return vote.toFixed(1);\n}\n"],"names":["Link","styled","NavLink","Box","BackLink","Container","MovieImg","movieId","useParams","useState","status","setStatus","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","fetchMovieId","getMovieId","console","log","vote","title","name","overview","tagline","poster_path","vote_average","release_date","imagePath","BASE_POSTER_URL","to","RequestGallery","propStatus","src","alt","loading","toFixed","Suspense","fallback"],"sourceRoot":""}