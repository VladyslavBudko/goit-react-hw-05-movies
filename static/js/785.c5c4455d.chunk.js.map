{"version":3,"file":"static/js/785.c5c4455d.chunk.js","mappings":"qRAEaA,EAAOC,EAAAA,GAAAA,KAAH,yEAKJC,EAAQD,EAAAA,GAAAA,MAAH,wI,GA4BUA,EAAAA,GAAAA,EAAH,2H,QCpBzB,EAXoB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OACE,SAACJ,EAAD,WACE,SAACE,EAAD,CAAOG,KAAK,OACZD,MAAOA,EACPD,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOH,MAAtB,KAGhB,E,2BC6DD,EAhEe,WAAO,IAAD,EACnB,GAAwBI,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4CN,EAAAA,EAAAA,UAAS,IAArD,eAAOO,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,uFACER,EAAU,WADZ,SAIiB,IAATL,EAJR,uBAKMC,EAAQ,GALd,2CAQyBa,EAAAA,EAAAA,IAAeH,EAAOX,GAR/C,OAQUe,EARV,OASIR,GAAkB,SAAAS,GAAS,wBAAQA,IAAR,OAAsBD,EAAOE,SAA7B,IAC3Bd,EAASY,EAAOb,OAChBG,EAAU,YAXd,kDAaIA,EAAU,YACVa,QAAQC,IAAR,MAdJ,2DAHc,sBACTR,GADS,mCAqBdS,EACD,GAAE,CAACT,EAAOX,IASX,OACE,iCACE,oCACA,0CACA,SAACqB,EAAA,EAAD,CAAgBC,WAAYlB,KAE5B,+BACE,4BACE,SAAC,EAAD,CAAaT,MAAOgB,EAAOjB,SAff,SAAAC,GAClBe,EAA0B,KAAVf,EAAe,CAAEgB,MAAOhB,GAAU,CAAC,GACnDY,EAAkB,IAClBN,EAAQ,GACRE,EAAS,EACV,KAWO,+BACE,SAACoB,EAAA,EAAD,CAAYC,YAAalB,MAE1BA,GACY,aAAXF,GACAE,EAAemB,OAASvB,IACtB,SAACwB,EAAA,EAAD,CACEC,QAAS,kBAAM1B,GAAQ,SAAAe,GAAS,OAAIA,EAAY,CAAhB,GAAvB,WAOxB,C","sources":["components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  min-width: 500px;\n  font-size: 20px;\n  color: black;\n  \n  // background-color: pink;\n\n`;\n\n// export const SearchButton = styled.button`\n//   position: absolute;\n//   top: 0;\n//   right: 10px;\n//   transform: translateY(20%);\n\n//   padding: 0;\n//   color: white;\n//   background-color: transparent;\n\n//   cursor: pointer;\n\n//   :hover,\n//   :focus {\n//     color: red;\n//   }\n// `;\n\nexport const ErrorMessage = styled.p`\n  position: absolute;\n  bottom: 50%;\n  transform: translate(10%, 50%);\n  pointer-events: none;\n`;\n","// import { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from './SearchMovie.styled';\n\nconst SearchMovie = ({ onChange, value }) => {\n  return (\n    <Form>\n      <Input type=\"text\" \n      value={value}\n      onChange={e => onChange(e.target.value)} />\n    </Form>\n  );\n};\n\n\nexport default SearchMovie;\n\nSearchMovie.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchingByName } from 'components/Api/Api';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\nimport RequestGallery from 'components/RequestGallery/RequestGallery';\n\nconst Movies = () => {\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [status, setStatus] = useState('idle');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function setQueriedMovies() {\n      setStatus('pending');\n\n      try {\n        if (page === 0) {\n          setPage(1);\n          return;\n        }\n        const movies = await fetchingByName(query, page);\n        setSearchedMovies(prevState => [...prevState, ...movies.results]);\n        setTotal(movies.total);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n\n    setQueriedMovies();\n  }, [query, page]);\n\n  const changeQuery = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n    setSearchedMovies([]);\n    setPage(1);\n    setTotal(0);\n  };\n\n  return (\n    <>\n      <h1>Movies</h1>\n      <h1>Search Movie</h1>\n      <RequestGallery propStatus={status} />\n\n      <>\n        <div>\n          <SearchMovie value={query} onChange={changeQuery} />\n          <>\n            <MoviesList moviesArray={searchedMovies} />\n          </>\n          {searchedMovies &&\n            status === 'resolved' &&\n            searchedMovies.length < total && (\n              <LoadMoreBtn\n                onClick={() => setPage(prevState => prevState + 1)}\n              />\n            )}\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","Input","onChange","value","type","e","target","useState","page","setPage","total","setTotal","status","setStatus","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchingByName","movies","prevState","results","console","log","setQueriedMovies","RequestGallery","propStatus","MoviesList","moviesArray","length","LoadMoreBtn","onClick"],"sourceRoot":""}